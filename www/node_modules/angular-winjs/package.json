{
  "name": "angular-winjs",
  "title": "Angular Wrapper for Windows Library for JavaScript (WinJS)",
  "description": "This code is a wrapper which facilitates usage of WinJS UI controls in an Angular application.",
  "homepage": "https://github.com/winjs/angular-winjs",
  "author": {
    "name": "Microsoft Corporation and other contributors",
    "url": "https://github.com/winjs/angular-winjs/graphs/contributors"
  },
  "license": "MIT",
  "version": "2.0.0",
  "main": "js/angular-winjs.js",
  "scripts": {
    "test": "karma start karma.config.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/winjs/angular-winjs"
  },
  "keywords": [
    "AngularJS",
    "WinJS",
    "angular",
    "windows8",
    "windows10"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/winjs/angular-winjs/blob/master/License.txt"
    }
  ],
  "bugs": {
    "url": "https://github.com/winjs/angular-winjs/issues"
  },
  "dependencies": {
    "angular": "~1.3.13"
  },
  "devDependencies": {
    "angular-mocks": "~1.3.13",
    "karma": "~0.10"
  },
  "readme": "angular-winjs\r\n=============\r\n\r\nProject to smooth the AngularJS/WinJS interaction. This code is a shim layer which facilitates usage of WinJS UI controls in an Angular Windows application. It achieves this by creating directives for the various controls which allow them to show up in Angular markup like:\r\n\r\nHow to use this in your Angular project?\r\n----------------------------------------\r\n\r\nJust make sure to include WinJS 4.0, and then include the shim.\r\n\r\n    <script src=\"WinJS.js\"></script>\r\n    <script src=\"angular-winjs.js\"></script>\r\n    \r\nYou must also add this module to your list of angular module dependencies:\r\n\r\n    angular.module('your-module', ['winjs', 'other-module-you-depend-on', 'etc']);\r\n\r\n\r\nExamples of control usage\r\n-------------------------\r\n\r\n### AppBar and AppBarCommand\r\n\r\n    <!-- Shows up on the bottom of the screen, use right-click or touch edgy gesture to show -->\r\n    <win-app-bar>\r\n        <win-app-bar-command icon=\"'home'\" label=\"'Home'\"></win-app-bar-command>\r\n        <win-app-bar-command icon=\"'save'\" label=\"'Save'\"></win-app-bar-command>\r\n    </win-app-bar>\r\n\r\n### DatePicker\r\n\r\n    <win-date-picker current=\"date\" on-change=\"dateChanged()\"></win-date-picker>\r\n\r\n### FlipView\r\n\r\n    <win-flip-view item-data-source=\"ratings\" on-page-selected=\"pageSelected()\">\r\n        <win-item-template>This flip view item's rating is: {{item.data.rating}}</win-item-template>\r\n    </win-flip-view>\r\n\r\n### Flyout\r\n\r\n    <button id=\"flyoutAnchor\">Show a flyout!</button>\r\n    <win-flyout anchor=\"'#flyoutAnchor'\">This is the flyout content!!</win-flyout>\r\n\r\n### Hub and HubSection\r\n\r\n    <win-hub>\r\n        <win-hub-section header=\"'First section'\" is-header-static=\"true\">\r\n          Hubs are useful for varied content\r\n        </win-hub-section>\r\n        <win-hub-section header=\"'The second section'\">\r\n          This hub is boring however, it just has things like data bindings: {{ratings.length}}\r\n        </win-hub-section>\r\n        <win-hub-section header=\"'The tail...'\">\r\n          Because it's only purpose is to show how to create a hub\r\n        </win-hub-section>\r\n    </win-hub>\r\n\r\n### ItemContainer\r\n\r\n    <win-item-container>\r\n      An ItemContainer is a wrapper around content that adds pressed\r\n      and cross-slide selection behaviors!\r\n    </win-item-container>\r\n\r\n### ListView\r\n\r\n    <div>Selected count: {{selection.length}}, indexes: {{selection.toString()}}</div>\r\n    <win-list-view item-data-source=\"ratings\" selection=\"selection\">\r\n        <win-item-template>This list view item's rating is: {{item.data.rating}}</win-item-template>\r\n        <win-list-layout></win-list-layout>\r\n    </win-list-view>\r\n\r\n### Menu and MenuCommand\r\n\r\n    <button id=\"menuAnchor\">Show a menu!</button>\r\n    <win-menu anchor=\"'#menuAnchor'\">\r\n        <win-menu-command label=\"'command the first'\"></win-menu-command>\r\n        <win-menu-command label=\"'command the second'\"></win-menu-command>\r\n        <win-menu-command label=\"'this would be a great place for ng-repeater...'\"></win-menu-command>\r\n    </win-menu>\r\n\r\n### NavBar and friends\r\n\r\n    <!-- Shows up on the top of the screen, use right-click or touch edgy gesture to show -->\r\n    <win-nav-bar>\r\n        <win-nav-bar-container>\r\n            <win-nav-bar-command label=\"'Home'\" icon=\"'home'\" tooltip=\"'Go home!!'\"></win-nav-bar-command>\r\n            <win-nav-bar-command label=\"'Save'\" icon=\"'save'\"></win-nav-bar-command>\r\n        </win-nav-bar-container>\r\n    </win-nav-bar>\r\n\r\n### Pivot and PivotItem\r\n\r\n    <win-pivot>\r\n        <win-pivot-item header=\"'First'\">\r\n          Pivots are useful for varied content\r\n        </win-pivot-item>\r\n        <win-pivot-item header=\"'Second'\">\r\n          This Pivot  is boring however, it just has things like data bindings: {{ratings.length}}\r\n        </win-pivot-item>\r\n        <win-pivot-item header=\"'Tail...'\">\r\n          Because it's only purpose is to show how to create a Pivot\r\n        </win-pivot-item>\r\n    </win-pivot>\r\n\r\n### Rating\r\n\r\n    The current rating is: {{ratings[0].rating}}.<br/>\r\n    <win-rating max-rating=\"5\" user-rating=\"ratings[0].rating\"></win-rating>\r\n\r\n### SearchBox\r\n\r\n    The current search text is: {{searchText}}.<br/>\r\n    <win-search-box query-text=\"searchText\"></win-search-box>\r\n\r\n### SemanticZoom\r\n\r\n    <win-semantic-zoom>\r\n        <win-list-view item-data-source=\"data\" group-data-source=\"data.groups\">\r\n            <win-item-template>\r\n                The data is: {{item.data}}\r\n            </win-item-template>\r\n            <win-group-header-template>\r\n                The group is: {{item.key}}\r\n            </win-group-header-template>\r\n        </win-list-view>\r\n        <win-list-view item-data-source=\"data.groups\">\r\n            <win-item-template>\r\n                The group is: {{item.key}}\r\n            </win-item-template>\r\n        </win-list-view>\r\n    </win-semantic-zoom>\r\n\r\n### SplitView\r\n\r\n    <win-split-view>\r\n        <win-split-view-pane>SplitView Navigation Pane</win-split-view-pane>\r\n        <win-split-view-content>SplitView Content Area</win-split-view-content>\r\n    </win-split-view>\r\n\r\n### ToolBar\r\n\r\n    <win-tool-bar>\r\n        <win-tool-bar-command label=\"'This is a ToolBar command'\" icon=\"'add'\"></win-tool-bar-command>\r\n    </win-tool-bar>\r\n\r\n### TimePicker\r\n\r\n    <win-time-picker current=\"time\"></win-time-picker>\r\n\r\n### ToggleSwitch\r\n    \r\n    <win-toggle-switch checked=\"toggleDisabled\" label-on=\"'Other Switch Disabled'\" label-off=\"'Other Switch Enabled'\"></win-toggle-switch>\r\n    The state is: {{toggleState}}<br/>\r\n\t<win-toggle-switch checked=\"toggleState\" disabled=\"toggleDisabled\"></win-toggle-switch>\r\n\r\n### Tooltip\r\n\r\n    <win-tooltip>\r\n        <win-tooltip-content>This can have arbitrary content, like images...</win-tooltip-content>\r\n        This has a tooltip, hover and see...\r\n    </win-tooltip>\r\n\r\nNotes\r\n-----\r\n\r\nFor all of the controls you can bind to all public properties and events and the camel cased property names conveniently map to attributes.\r\n",
  "readmeFilename": "README.md",
  "_id": "angular-winjs@2.0.0",
  "dist": {
    "shasum": "70ea4d7bbb2a2894f9314b388591ed1aefceca88"
  },
  "_from": "angular-winjs@",
  "_resolved": "https://registry.npmjs.org/angular-winjs/-/angular-winjs-2.0.0.tgz"
}
